== Public and Private records

Before October 2012, objects imported into SALT were assumed to be private, and thus invisible to unauthenticated users, unless explicitly marked public. In October 2012, though, we flipped the policy, and from then on objects are assumed to be public unless they are explicitly marked private.

=== How is an object marked private?

In the zotero database maintained by Ed Feigenbaum, the subject tag PRIVATE is applied to any object that should be shielded from unauthenticated access. In our data import, it looks like this in the RDF export generated by zotero:

  <dc:subject>PRIVATE</dc:subject>

See 'spec/fixtures/zotero2_ds.xml' for an example. 

=== How is that tag translated into gated discovery? 

In 'lib/stanford/salt_document.rb' there is a method called 'zotero_to_solr'. This takes the zotero output and turns it into a solr document, which is used for discovery and access. #zotero_to_solr first generates default values, and then overrides or augments them as it parses the various zotero tags.

==== #generate_zotero_defaults

This populates the default values of the solr document that is created for each object. This used to set default values to private, but now sets them to public, like this:

  # Mark everything public by default, per request on October 3, 2012 --Bess    
  id_hash["access_display"] ||= ["Public"]
  id_hash["access_facet"] ||= ["Public"]
  id_hash["public_b"] ||= ['true']

==== #zotero_to_solr

This parses zotero tags, including the PRIVATE subject tag mentioned above. 

  ...
  json["tags"].each do |tag|
  if tag.upcase == "PUBLIC"
    zotero_hash["public_b"] = ['true'] 
    zotero_hash["access_display"] = ["Public"]
    zotero_hash["access_facet"] = ["Public"]
  elsif tag.upcase == 'PRIVATE'
    zotero_hash["public_b"] = ['false'] 
    zotero_hash["access_display"] = ["Private"]
    zotero_hash["access_facet"] = ["Private"]
  else
  ...

==== Gated discovery at query time

Once the solr documents are populated correctly, access is controlled via 'authentication_helper.rb', which will append "public_b:true" to any solr query issued by an unauthenticated user.

	def get_solr_doc_with_gated_discovery(doc_id, solr_parameters={})
	  unless user_signed_in? or request.env["REMOTE_ADDR"] == FLIPBOOK_IP  or  request.env["REMOTE_ADDR"] == DJATOKA_IP
	    solr_parameters[:fq] ||= []
	    solr_parameters[:fq] << "public_b:true"
	  end
	  get_solr_response_for_doc_id(doc_id, solr_parameters)
	end
